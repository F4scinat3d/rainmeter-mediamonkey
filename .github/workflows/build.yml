name: build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: 
      - main
      - 'dependabot/**'

env:
  base_version_number: "2.0.2"
  build_configuration: "Release"
  build_platform: "x64"

jobs:

  build:
    runs-on: windows-latest
    timeout-minutes: 10
    outputs:
      version: ${{ steps.set-version.outputs.VERSION }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Set version number
      id: set-version
      shell: pwsh
      run: |
        $version = "${{ env.base_version_number }}.${{ github.run_number }}${{ github.run_attempt }}"
        Write-Output "Setting version to $version"
        "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        "VERSION=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

    - name: Update Assembly Version
      shell: pwsh
      run: |
        $NewVersion = 'AssemblyVersion("${{ env.VERSION }}")'
        $tmpFile = New-TemporaryFile
        $assemblyInfoPath = "${{ github.workspace }}/PluginMediaMonkey/AssemblyInfo.cs"
        (Get-Content -Path $assemblyInfoPath -Encoding utf8) -replace 'AssemblyVersion\(".*"\)', $NewVersion | Set-Content -Path $tmpFile -Encoding utf8
        Move-Item -Path $tmpFile -Destination $assemblyInfoPath -Force

    - name: Restore Packages
      shell: pwsh
      run: nuget restore MediaMonkey-Rainmeter.sln

    - name: Build Solution
      shell: pwsh
      run: |
        msbuild.exe MediaMonkey-Rainmeter.sln /t:Build /nologo /nr:false /p:Version=${{ env.VERSION }} /p:platform="${{ env.build_platform }}" /p:configuration="${{ env.build_configuration }}"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.build_configuration }}
        path: ${{ github.workspace }}/PluginMediaMonkey/${{ env.build_platform }}/${{ env.build_configuration }}

  release:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Get plugin - x64
      uses: actions/download-artifact@v3
      with:
        name: x64
        path: ${{ github.workspace }}/publish/x64
        
    - name: Zip Files
      run: Compress-Archive -Path "${{ github.workspace }}\publish\*" -DestinationPath "${{ github.workspace }}\publish\rainmeter-mediamonkey.v${{ needs.build.outputs.version }}.zip"
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: plugin
        path: ${{ github.workspace }}\publish\rainmeter-mediamonkey.v${{ needs.build.outputs.version }}.zip
